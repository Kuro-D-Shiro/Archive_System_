// <auto-generated />
using System;
using Archive_System.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Archive_System.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Archive_System.Model.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("RackNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("ShalfNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("Archive_System.Model.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CellId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstancedCount")
                        .HasColumnType("bigint");

                    b.Property<long>("IssuedInstancedCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CellId")
                        .IsUnique()
                        .HasFilter("[CellId] IS NOT NULL");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Archive_System.Model.IssuedDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<long>("InstancedCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("IssueDocuments", (string)null);
                });

            modelBuilder.Entity("Archive_System.Model.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronimic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("DocumentSubscriber", b =>
                {
                    b.Property<int>("DocumentsId")
                        .HasColumnType("int");

                    b.Property<int>("SubscribersId")
                        .HasColumnType("int");

                    b.HasKey("DocumentsId", "SubscribersId");

                    b.HasIndex("SubscribersId");

                    b.ToTable("DocumentSubscriber");
                });

            modelBuilder.Entity("Archive_System.Model.Document", b =>
                {
                    b.HasOne("Archive_System.Model.Cell", "Cell")
                        .WithOne("Document")
                        .HasForeignKey("Archive_System.Model.Document", "CellId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("Archive_System.Model.IssuedDocument", b =>
                {
                    b.HasOne("Archive_System.Model.Document", "Document")
                        .WithMany("IssuedDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archive_System.Model.Subscriber", "Subscriber")
                        .WithMany("IssuedDocuments")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("DocumentSubscriber", b =>
                {
                    b.HasOne("Archive_System.Model.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archive_System.Model.Subscriber", null)
                        .WithMany()
                        .HasForeignKey("SubscribersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Archive_System.Model.Cell", b =>
                {
                    b.Navigation("Document");
                });

            modelBuilder.Entity("Archive_System.Model.Document", b =>
                {
                    b.Navigation("IssuedDocuments");
                });

            modelBuilder.Entity("Archive_System.Model.Subscriber", b =>
                {
                    b.Navigation("IssuedDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
